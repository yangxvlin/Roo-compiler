# array[0] abc; # array size error

procedure main ()
{
    n <- (a * b) + c;
    n <- (a / b) + c;
    n <- (a + b) + c;
    n <- (a - b) + c;
    n <- (a * b) - c;
    n <- (a / b) - c;
    n <- (a + b) - c;
    n <- (a - b) - c;
    n <- (a * b) * c;
    n <- (a / b) * c;
    y <- (a + b) * c;
    y <- (a - b) * c;
    n <- (a * b) / c;
    n <- (a / b) / c;
    y <- (a + b) / c;
    y <- (a - b) / c;

    y <- a * (b + c);
    y <- a / (b + c);
    n <- a + (b + c);
    y <- a - (b + c);
    y <- a * (b - c);
    y <- a / (b - c);
    n <- a + (b - c);
    y <- a - (b - c);
    n <- a * (b * c);
    y <- a / (b * c);
    n <- a + (b * c);
    n <- a - (b * c);
    y <- a * (b / c); # integer division
    y <- a / (b / c);
    n <- a + (b / c);
    n <- a - (b / c);

    y <- -(a + b);
    n <- (-a) + b;

    y <- (a = b) = c;
    y <- a = (b = c);

    n <- (not a) and b;
    y <- not (a and b);
    n <- (not a) or b;
    y <- not (a or b);
    n <- a and (not b);
    n <- a or (not b);

    n <- not (1 < 2);
    n <- not (1 > 2);

    n <- a = (-5);
    n <- a + (-5);
    n <- - -5;
    n <- 2 - -5;
    
    n <- 1;
    n <--- 1;
    n <----- 1;


    y <- (not a) = b;
    n <- not a = b;
    n <- a = (not b);
    # n <- a = not b; # error

    # n____________ <- not not b;
    # n____________ <- not a = not b;

    # n____________ <- not not true = not false;
    n <- not (not (true = (not false)));
    # n____________ <- not not true and not false;
    n <- (not (not true)) and not false;
    # n <- (not not true) and (not false);
    # n <- not 1 + not 2 and 3;
    n <- (not (1 + (not 2))) and 3;
    text <- 5*2 * 2;
    test <- ----- (not b);

    write "abc\abc \ \n\t\"\\ "; # escaping
    # write "\"; # escaping
}